var index = 0
var limit = 0
val array = java::["[B"](100)

var commandIndex = -1
val commandQueue = "-[------->+<]>-.-[->+++++<]>++.+++++++..+++.[--->+<]>-----.---[->+++<]>.-[--->+<]>---.+++.------.--------."


var output = ""

loop (commandIndex++ < commandQueue.length()) {
    case (commandQueue[commandIndex]) {
        '+' { array[index] = array[index] + 1 }
        '-' { array[index] = array[index] - 1 }
        '<' {
            when (index == 0) {
                index = array.length - 1
            }
            else {
                index--
            }
        }
        '>' {
            when (index == (array.length - 1)) {
                index = 0
            }
            else {
                index++
            }
        }
        '.' {
            output += cast::[Let](array[index])
        }
        ',' {
            array[index] = pull::[Byt]("input value:")
        }
        '[' {
            when (cast::[Int](array[index]) == 0) {
                commandIndex++

                loop (limit > 0 || commandQueue[commandIndex] != ']') {

                    case (commandQueue[commandIndex]) {
                        '[' { limit++ }
                        ']' { limit-- }
                    }

                    commandIndex++
                }
            }
        }
        ']' {
            when (cast::[Int](array[index]) != 0) {
                commandIndex--

                loop (limit > 0 || commandQueue[commandIndex] != '[') {

                    case (commandQueue[commandIndex]) {
                        ']' { limit++ }
                        '[' { limit-- }
                    }

                    commandIndex--
                }

                commandIndex--
            }
        }
    }
}

when (output != "") {
    push "\n\n$output\n\n"
}